{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRegistered = _useState10[0],\n    setIsRegistered = _useState10[1];\n  var handleSignIn = function handleSignIn() {\n    if (email && password && isRegistered) {\n      setMessage('Login Efetuado com Sucesso');\n      clearInputs();\n      navigation.navigate('Home');\n    } else {\n      setMessage('Por favor, corrija os dados ou crie uma conta');\n    }\n  };\n  var handleSignUp = function handleSignUp() {\n    if (username && email && password) {\n      setMessage('Conta Criada com Sucesso');\n      clearInputs();\n      setIsRegistered(true);\n      console.log('Dados do cadastro:', {\n        username: username,\n        email: email,\n        password: password\n      });\n    } else {\n      setMessage('Por favor, corrija os dados');\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.background,\n    behavior: \"padding\",\n    children: _jsx(ImageBackground, {\n      style: styles.titleImage,\n      source: require(\"./src/img/LOGO.PNG\"),\n      resizeMode: \"contain\",\n      children: _jsx(View, {\n        style: styles.overlay,\n        children: _jsxs(View, {\n          style: styles.formContainer,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setUsername(text);\n            },\n            value: username,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Username\",\n            autoCorrect: false\n          }), _jsx(TextInput, {\n            style: [styles.input, email === '' && styles.errorInput],\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            value: email,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Email\",\n            autoCorrect: false\n          }), _jsx(TextInput, {\n            style: [styles.input, password === '' && styles.errorInput],\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            value: password,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Password\",\n            autoCorrect: false,\n            secureTextEntry: true\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonLogin,\n            onPress: handleSignIn,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \" Acessar \"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonSignup,\n            onPress: handleSignUp,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \" Criar conta \"\n            })\n          }), message !== '' && _jsx(Text, {\n            style: styles.messageText,\n            children: message\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: '#2E2E2E'\n  },\n  titleImage: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 200,\n    marginTop: -180\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.0)'\n  },\n  formContainer: {\n    marginTop: 750,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    width: '70%',\n    height: 30,\n    backgroundColor: '#FFFFFF',\n    marginBottom: 10,\n    color: '#000000',\n    paddingHorizontal: 10,\n    borderRadius: 8\n  },\n  buttonLogin: {\n    backgroundColor: '#000000',\n    height: 30,\n    width: '70%',\n    borderRadius: 8,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  buttonSignup: {\n    backgroundColor: 'transparent',\n    height: 30,\n    width: 100,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    fontSize: 15,\n    marginTop: -5\n  },\n  errorInput: {\n    borderColor: '#DBA901'\n  },\n  labelError: {\n    alignSelf: 'center',\n    color: '#FF0000',\n    marginBottom: 8\n  },\n  messageText: {\n    marginTop: 10,\n    color: '#848484',\n    fontSize: 15\n  }\n});","map":{"version":3,"names":["React","useState","View","KeyboardAvoidingView","ImageBackground","TouchableOpacity","Text","TextInput","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","_useState9","_useState10","isRegistered","setIsRegistered","handleSignIn","clearInputs","navigate","handleSignUp","console","log","style","styles","background","behavior","children","titleImage","source","require","resizeMode","overlay","formContainer","input","onChangeText","text","value","placeholderTextColor","placeholder","autoCorrect","errorInput","secureTextEntry","buttonLogin","onPress","buttonText","buttonSignup","messageText","create","flex","alignItems","justifyContent","backgroundColor","width","marginBottom","marginTop","height","color","paddingHorizontal","borderRadius","textAlign","fontSize","borderColor","labelError","alignSelf"],"sources":["C:/Users/Saulo/Segunda-Fase-SA/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, KeyboardAvoidingView, ImageBackground, TouchableOpacity, Text, TextInput, StyleSheet } from 'react-native';\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const handleSignIn = () => {\r\n    if (email && password && isRegistered) {\r\n      setMessage('Login Efetuado com Sucesso');\r\n      clearInputs();\r\n      navigation.navigate('Home');\r\n    } else {\r\n      setMessage('Por favor, corrija os dados ou crie uma conta');\r\n    }\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    if (username && email && password) {\r\n      setMessage('Conta Criada com Sucesso');\r\n      clearInputs();\r\n      setIsRegistered(true);\r\n      console.log('Dados do cadastro:', { username, email, password });\r\n    } else {\r\n      setMessage('Por favor, corrija os dados');\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setUsername('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.background} behavior=\"padding\">\r\n      <ImageBackground style={styles.titleImage} source={require('./src/img/LOGO.PNG')} resizeMode=\"contain\">\r\n        <View style={styles.overlay}>\r\n          <View style={styles.formContainer}>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setUsername(text)}\r\n              value={username}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder='Username'\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n              style={[styles.input, email === '' && styles.errorInput]}\r\n              onChangeText={(text) => setEmail(text)}\r\n              value={email}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder='Email'\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n              style={[styles.input, password === '' && styles.errorInput]}\r\n              onChangeText={(text) => setPassword(text)}\r\n              value={password}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder='Password'\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n            />\r\n\r\n            <TouchableOpacity style={styles.buttonLogin} onPress={handleSignIn}>\r\n              <Text style={styles.buttonText}> Acessar </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.buttonSignup} onPress={handleSignUp}>\r\n              <Text style={styles.buttonText}> Criar conta </Text>\r\n            </TouchableOpacity>\r\n\r\n            {message !== '' && <Text style={styles.messageText}>{message}</Text>}\r\n\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: '#2E2E2E',\r\n  },\r\n  titleImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    marginBottom: 200,\r\n    marginTop: -180,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n  },\r\n  formContainer: {\r\n    marginTop: 750,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '70%',\r\n    height: 30,\r\n    backgroundColor: '#FFFFFF',\r\n    marginBottom: 10,\r\n    color: '#000000',\r\n    paddingHorizontal: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonLogin: {\r\n    backgroundColor: '#000000', \r\n    height: 30,\r\n    width: '70%',\r\n    borderRadius: 8,\r\n    marginTop: 0,\r\n    justifyContent: 'center',\r\n  },\r\n  buttonSignup: {\r\n    backgroundColor: 'transparent',\r\n    height: 30,\r\n    width: 100,\r\n    borderRadius: 8,\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    fontSize: 15,\r\n    marginTop: -5,\r\n  },\r\n  errorInput: {\r\n    borderColor: '#DBA901',\r\n    \r\n  },\r\n  labelError: {\r\n    alignSelf: 'center',\r\n    color: '#FF0000',\r\n    marginBottom: 8,\r\n  },\r\n  messageText: {\r\n    marginTop: 10,\r\n    color: '#848484',\r\n    fontSize: 15,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}