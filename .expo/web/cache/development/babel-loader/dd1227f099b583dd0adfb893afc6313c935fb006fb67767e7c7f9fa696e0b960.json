{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ProfileScreen from \"./AppNoticias\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRegistered = _useState10[0],\n    setIsRegistered = _useState10[1];\n  var isValidEmail = function isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  var isValidPassword = function isValidPassword(password) {\n    return password.length >= 4;\n  };\n  var handleSignIn = function handleSignIn() {\n    if (!isRegistered) {\n      setMessage('Por favor, cadastre-se primeiro.');\n    } else if (!isValidEmail(email) || !isValidPassword(password)) {\n      setMessage('Corrija os dados por favor.');\n    } else {\n      setMessage('Login Efetuado com Sucesso');\n      navigation.navigate('Profile');\n    }\n  };\n  var handleSignUp = function handleSignUp() {\n    if (!isValidEmail(email) || !isValidPassword(password)) {\n      setMessage('Corrija os dados por favor.');\n    } else {\n      setMessage('Cadastro Criado com Sucesso');\n      setIsRegistered(true);\n      clearInputs();\n      console.log('Dados do cadastro:', {\n        name: name,\n        email: email,\n        password: password\n      });\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.background,\n    behavior: \"padding\",\n    children: _jsx(ImageBackground, {\n      style: styles.titleImage,\n      source: require(\"./src/img/LOGO.PNG\"),\n      resizeMode: \"contain\",\n      children: _jsx(View, {\n        style: styles.overlay,\n        children: _jsxs(View, {\n          style: styles.formContainer,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setName(text);\n            },\n            value: name,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Name\",\n            autoCorrect: false\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            value: email,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Email\",\n            autoCorrect: false,\n            keyboardType: \"email-address\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            value: password,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Password\",\n            autoCorrect: false,\n            secureTextEntry: true\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonLogin,\n            onPress: handleSignIn,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \" Acessar \"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonSignup,\n            onPress: handleSignUp,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \" Cadastrar-se \"\n            })\n          }), message !== '' && _jsx(Text, {\n            style: styles.messageText,\n            children: message\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: '#2E2E2E'\n  },\n  titleImage: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 200,\n    marginTop: -180\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.0)'\n  },\n  formContainer: {\n    marginTop: 750,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    width: '70%',\n    height: 30,\n    backgroundColor: '#FFFFFF',\n    marginBottom: 10,\n    color: '#000000',\n    paddingHorizontal: 10,\n    borderRadius: 8\n  },\n  buttonLogin: {\n    backgroundColor: '#8908bb',\n    height: 30,\n    width: '70%',\n    borderRadius: 8,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  buttonSignup: {\n    backgroundColor: 'transparent',\n    height: 30,\n    width: 100,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    fontSize: 15,\n    marginTop: -5\n  },\n  messageText: {\n    marginTop: 10,\n    color: '#848484',\n    fontSize: 15\n  }\n});\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      headerMode: \"none\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","View","KeyboardAvoidingView","ImageBackground","TouchableOpacity","Text","TextInput","StyleSheet","NavigationContainer","createStackNavigator","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","_useState9","_useState10","isRegistered","setIsRegistered","isValidEmail","test","isValidPassword","length","handleSignIn","navigate","handleSignUp","clearInputs","console","log","style","styles","background","behavior","children","titleImage","source","require","resizeMode","overlay","formContainer","input","onChangeText","text","value","placeholderTextColor","placeholder","autoCorrect","keyboardType","secureTextEntry","buttonLogin","onPress","buttonText","buttonSignup","messageText","create","flex","alignItems","justifyContent","backgroundColor","width","marginBottom","marginTop","height","color","paddingHorizontal","borderRadius","textAlign","fontSize","App","Navigator","headerMode","Screen","component","options","headerShown"],"sources":["C:/Users/Saulo/Segunda-Fase-SA/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  KeyboardAvoidingView,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport ProfileScreen from './AppNoticias';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\r\n  const isValidPassword = (password) => password.length >= 4;\r\n\r\n  const handleSignIn = () => {\r\n    if (!isRegistered) {\r\n      setMessage('Por favor, cadastre-se primeiro.');\r\n    } else if (!isValidEmail(email) || !isValidPassword(password)) {\r\n      setMessage('Corrija os dados por favor.');\r\n    } else {\r\n      setMessage('Login Efetuado com Sucesso');\r\n      navigation.navigate('Profile');\r\n    }\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    if (!isValidEmail(email) || !isValidPassword(password)) {\r\n      setMessage('Corrija os dados por favor.');\r\n    } else {\r\n      setMessage('Cadastro Criado com Sucesso');\r\n      setIsRegistered(true);\r\n      clearInputs();\r\n      console.log('Dados do cadastro:', { name, email, password });\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.background} behavior=\"padding\">\r\n      <ImageBackground\r\n        style={styles.titleImage}\r\n        source={require('./src/img/LOGO.PNG')}\r\n        resizeMode=\"contain\"\r\n      >\r\n        <View style={styles.overlay}>\r\n          <View style={styles.formContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setName(text)}\r\n              value={name}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Name\"\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setEmail(text)}\r\n              value={email}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Email\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n            />\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setPassword(text)}\r\n              value={password}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Password\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n            />\r\n\r\n            <TouchableOpacity style={styles.buttonLogin} onPress={handleSignIn}>\r\n              <Text style={styles.buttonText}> Acessar </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.buttonSignup} onPress={handleSignUp}>\r\n              <Text style={styles.buttonText}> Cadastrar-se </Text>\r\n            </TouchableOpacity>\r\n\r\n            {message !== '' && <Text style={styles.messageText}>{message}</Text>}\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: '#2E2E2E',\r\n  },\r\n  titleImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    marginBottom: 200,\r\n    marginTop: -180,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n  },\r\n  formContainer: {\r\n    marginTop: 750,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '70%',\r\n    height: 30,\r\n    backgroundColor: '#FFFFFF',\r\n    marginBottom: 10,\r\n    color: '#000000',\r\n    paddingHorizontal: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonLogin: {\r\n    backgroundColor: '#8908bb',\r\n    height: 30,\r\n    width: '70%',\r\n    borderRadius: 8,\r\n    marginTop: 0,\r\n    justifyContent: 'center',\r\n  },\r\n  buttonSignup: {\r\n    backgroundColor: 'transparent',\r\n    height: 30,\r\n    width: 100,\r\n    borderRadius: 8,\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    fontSize: 15,\r\n    marginTop: -5,\r\n  },\r\n  messageText: {\r\n    marginTop: 10,\r\n    color: '#848484',\r\n    fontSize: 15,\r\n  },\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator headerMode='none'>\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }}  />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} options={{ headerShown: false }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}