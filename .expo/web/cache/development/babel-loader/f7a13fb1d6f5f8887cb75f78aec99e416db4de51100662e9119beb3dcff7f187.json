{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ProfileScreen from \"./AppNoticias\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var isSignUp = name !== '';\n  var isValidEmail = function isValidEmail(email) {\n    var isValid = /\\S+@\\S+\\.\\S+/.test(email);\n    return isValid;\n  };\n  var isValidInput = function isValidInput(input) {\n    return input.length >= 4;\n  };\n  var handleSignIn = function handleSignIn() {\n    if (!isSignUp) {\n      setMessage('Pressione \"Cadastrar-se\" para criar uma conta.');\n    } else if (!isValidEmail(email) || !isValidInput(password)) {\n      setMessage('Corrija os dados por favor.');\n    } else {\n      setMessage('Login Efetuado com Sucesso');\n      clearInputs();\n      navigation.navigate('Profile');\n    }\n  };\n  var handleSignUp = function handleSignUp() {\n    if (!isValidEmail(email) || !isValidInput(password)) {\n      setMessage('Corrija os dados por favor.');\n    } else {\n      setMessage('Cadastro Criado com Sucesso');\n      clearInputs();\n      navigation.navigate('Profile');\n      console.log('Dados do cadastro:', {\n        name: name,\n        email: email,\n        password: password\n      });\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.background,\n    behavior: \"padding\",\n    children: _jsx(ImageBackground, {\n      style: styles.titleImage,\n      source: require(\"./src/img/LOGO.PNG\"),\n      resizeMode: \"contain\",\n      children: _jsx(View, {\n        style: styles.overlay,\n        children: _jsxs(View, {\n          style: styles.formContainer,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setName(text);\n            },\n            value: name,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Name\",\n            autoCorrect: false\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            value: email,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Email\",\n            autoCorrect: false,\n            keyboardType: \"email-address\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            value: password,\n            placeholderTextColor: \"#000000\",\n            placeholder: \"Password\",\n            autoCorrect: false,\n            secureTextEntry: true\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonLogin,\n            onPress: handleSignIn,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \" Acessar \"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonSignup,\n            onPress: handleSignUp,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: isSignUp ? 'Cadastrar-se' : 'Registre-se'\n            })\n          }), message !== '' && _jsx(Text, {\n            style: styles.messageText,\n            children: message\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: '#2E2E2E'\n  },\n  titleImage: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 200,\n    marginTop: -180\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.0)'\n  },\n  formContainer: {\n    marginTop: 750,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    width: '70%',\n    height: 30,\n    backgroundColor: '#FFFFFF',\n    marginBottom: 10,\n    color: '#000000',\n    paddingHorizontal: 10,\n    borderRadius: 8\n  },\n  buttonLogin: {\n    backgroundColor: '#8908bb',\n    height: 30,\n    width: '70%',\n    borderRadius: 8,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  buttonSignup: {\n    backgroundColor: 'transparent',\n    height: 30,\n    width: 100,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    fontSize: 15,\n    marginTop: -5\n  },\n  messageText: {\n    marginTop: 10,\n    color: '#848484',\n    fontSize: 15\n  }\n});\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","View","KeyboardAvoidingView","ImageBackground","TouchableOpacity","Text","TextInput","StyleSheet","NavigationContainer","createStackNavigator","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","isSignUp","isValidEmail","isValid","test","isValidInput","input","length","handleSignIn","clearInputs","navigate","handleSignUp","console","log","style","styles","background","behavior","children","titleImage","source","require","resizeMode","overlay","formContainer","onChangeText","text","value","placeholderTextColor","placeholder","autoCorrect","keyboardType","secureTextEntry","buttonLogin","onPress","buttonText","buttonSignup","messageText","create","flex","alignItems","justifyContent","backgroundColor","width","marginBottom","marginTop","height","color","paddingHorizontal","borderRadius","textAlign","fontSize","App","Navigator","initialRouteName","Screen","component"],"sources":["C:/Users/Saulo/Segunda-Fase-SA/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  KeyboardAvoidingView,\r\n  ImageBackground,\r\n  TouchableOpacity,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\n// Sua tela de perfil (ProfileScreen)\r\nimport ProfileScreen from './AppNoticias';\r\n\r\n// Criando o Stack Navigator\r\nconst Stack = createStackNavigator();\r\n\r\n// Componente para a tela de login\r\nfunction LoginScreen({ navigation }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const isSignUp = name !== '';\r\n\r\n  const isValidEmail = (email) => {\r\n    const isValid = /\\S+@\\S+\\.\\S+/.test(email);\r\n    return isValid;\r\n  };\r\n\r\n  const isValidInput = (input) => input.length >= 4;\r\n\r\n  const handleSignIn = () => {\r\n    if (!isSignUp) {\r\n      setMessage('Pressione \"Cadastrar-se\" para criar uma conta.');\r\n    } else if (!isValidEmail(email) || !isValidInput(password)) {\r\n      setMessage('Corrija os dados por favor.');\r\n    } else {\r\n      setMessage('Login Efetuado com Sucesso');\r\n      clearInputs();\r\n      navigation.navigate('Profile');\r\n    }\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    if (!isValidEmail(email) || !isValidInput(password)) {\r\n      setMessage('Corrija os dados por favor.');\r\n    } else {\r\n      setMessage('Cadastro Criado com Sucesso');\r\n      clearInputs();\r\n      navigation.navigate('Profile');\r\n      console.log('Dados do cadastro:', { name, email, password });\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.background} behavior=\"padding\">\r\n      <ImageBackground\r\n        style={styles.titleImage}\r\n        source={require('./src/img/LOGO.PNG')}\r\n        resizeMode=\"contain\"\r\n      >\r\n        <View style={styles.overlay}>\r\n          <View style={styles.formContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setName(text)}\r\n              value={name}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Name\"\r\n              autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setEmail(text)}\r\n              value={email}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Email\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n            />\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(text) => setPassword(text)}\r\n              value={password}\r\n              placeholderTextColor=\"#000000\"\r\n              placeholder=\"Password\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n            />\r\n\r\n            <TouchableOpacity style={styles.buttonLogin} onPress={handleSignIn}>\r\n              <Text style={styles.buttonText}> Acessar </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.buttonSignup} onPress={handleSignUp}>\r\n              <Text style={styles.buttonText}>\r\n                {isSignUp ? 'Cadastrar-se' : 'Registre-se'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            {message !== '' && <Text style={styles.messageText}>{message}</Text>}\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: '#2E2E2E',\r\n  },\r\n  titleImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    marginBottom: 200,\r\n    marginTop: -180,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n  },\r\n  formContainer: {\r\n    marginTop: 750,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '70%',\r\n    height: 30,\r\n    backgroundColor: '#FFFFFF',\r\n    marginBottom: 10,\r\n    color: '#000000',\r\n    paddingHorizontal: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonLogin: {\r\n    backgroundColor: '#8908bb',\r\n    height: 30,\r\n    width: '70%',\r\n    borderRadius: 8,\r\n    marginTop: 0,\r\n    justifyContent: 'center',\r\n  },\r\n  buttonSignup: {\r\n    backgroundColor: 'transparent',\r\n    height: 30,\r\n    width: 100,\r\n    borderRadius: 8,\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    backgroundColor: 'transparent',\r\n    fontSize: 15,\r\n    marginTop: -5,\r\n  },\r\n  messageText: {\r\n    marginTop: 10,\r\n    color: '#848484',\r\n    fontSize: 15,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Login\">\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}